"""Interactive Programming Mini-Project 4: Live Wallpaper

Authors: Hwei-Shin Harriman and Jessie Potter
References: http://programarcadegames.com/python_examples/en/sprite_sheets/"""
import pygame
import constants
import livebackground
import random

def main():
    """Main Program"""
    pygame.init()

    #set height and widght of Screen
    size = [constants.SCREEN_WIDTH, constants.SCREEN_HEIGHT]
    screen = pygame.display.set_mode(size)

    pygame.display.set_caption("Southwest")

    #Create the scenery
    level_list = []
    level_list.append(livebackground.Summer())

    #Set level
    current_level_no = 0
    current_level = level_list[current_level_no]

    active_sprite_list = pygame.sprite.Group()
    shift = 0
    count = 0

    #active_sprite_list.add(player)

    #Loop until the user clicks the close button
    done = False

    #Used to manage how fast the screen updates
    clock =pygame.time.Clock()

    #----------Main Program Loop---------
    while not done:
        for event in pygame.event.get():  #user did something
            if event.type == pygame.QUIT:       #If user clicked close
                done = True #Flag that we are done so we exit the Loop
            elif event.type == pygame.MOUSEBUTTONDOWN:
                xpos, ypos = event.pos
                if 0 <= ypos <= 500:
                    current_level.spawnballoon(xpos, ypos)
                if (3020+shift) <= xpos <= (3200+shift) and 497 <= ypos <= 985:
                    if count<=2:
                        current_level.spawnflower(xpos, ypos)
                        count+=1

        #update items in the level
        current_level.update(-5)

        #shift the world left (-x)
        current_level.shift_world(-5, screen)
        shift += -5
        if shift == -3900:
            shift = 0
            count = 0

        #ALL CODE TO DRAW SHOULD GO BELOW THIS COMMENT
        current_level.draw(screen)

        #ALL CODE TO DRAW SHOULD GO ABOVE THIS COMMENT

        #Limit to 60 fps
        clock.tick(30)

        #Update screen with what we've drawn
        pygame.display.flip()
    pygame.quit()

if __name__=="__main__":
    main()
